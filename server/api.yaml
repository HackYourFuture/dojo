# Tip: Use https://editor.swagger.io/ to edit and preview this API specification

openapi: 3.0.3
info:
  title: Dojo API
  description: |-
    Welcome to the Dojo API specification
  version: 1.0.0
externalDocs:
  description: Dojo GitHub repository
  url: https://github.com/hackYourFuture/dojo
servers:
  - url: http://localhost:7777/api/
    description: Local development server
  - url: https://dojo-test.hackyourfuture.net/api/
    description: Test server
tags:
  - name: auth
    description: ''
  - name: search
    description: ''
  - name: trainees
    description: ''
  - name: geography
    description: ''
paths:
  /auth/login:
    post:
      tags:
        - auth
      summary: Login to the system
      description: The endpoint exchanges Google OAuth2 token for internal JWT token to be used for authenticated requests
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        401:
          description: Authentication failed. The provided token may be invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Unauthorized user - The user is not allowed to login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /auth/session:
    get:
      tags:
        - auth
      summary: Get current logged in user info
      description: This endpoint returns the currently authenticated user. It extracts and verifies the session token.
      security:
        - cookie_token:
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /auth/logout:
    post:
      tags:
        - auth
      summary: Logout from the system
      description: The endpoint removes the session token from the cookies.
      security:
        - cookie_token:
      responses:
        204:
          description: successful operation
        401:
          description: Not logged in.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /search:
    get:
      tags:
        - search
      summary: Find trainees
      description:  Find trainees by a keyword. The search will try to match the first name, last name or email.
      security:
        - cookie_token:
      parameters:
        - name: q
          in: query
          description: Search query
          required: true
          schema:
            type: string
        - name: limit
          in: query
          description: Limit the number of results. Default value is 20, Max value is 50.
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 50
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  hits:
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              example: 'Pv3R416r'
                            name:
                              type: string
                              example: John Doe
                      size:
                        type: integer
                        example: 45

        '400':
          description: Missing query
  /trainees:
    post:
      tags:
        - trainees
      summary: Create new profile
      description: ''
      security:
        - cookie_token:
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Trainee'
      responses:
        default:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trainee'
  /trainees/{id}:
    get:
      tags:
        - trainees
      summary: Fetch information about a trainee
      description: ''
      security:
        - cookie_token:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: "3jvz35Z"
          
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trainee'
        '404':
          description: Trainee was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    patch:
      tags:
        - trainees
      summary: Update trainee information
      description: ''
      security:
        - cookie_token:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: "3jvz35Z"
      requestBody:
        description: 'Can be partially sent for partial updates'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Trainee'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trainee'
        '404':
          description: Trainee was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
    delete:
      tags:
        - trainees
      summary: Delete trainee from the system
      description: ''
      security:
        - cookie_token:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: "3jvz35Z"
          
      responses:
        '204':
          description: successful operation

        '404':
          description: Trainee was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /trainees/{id}/profile-picture:
    get:
      tags:
        - trainees
      summary: Fetch the profile picture of a trainee
      description: ''
      security:
        - cookie_token:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: "3jvz35Z"
        - name: size
          in: query
          description: Fetch a different size of the image.
          required: false
          schema:
            type: string
            enum:
            - small
          
          
      responses:
        '200':
          description: successful operation
          content:
            image/png:
              schema:
                $ref: '#/components/schemas/Binary'
        '404':
          description: Trainee was not found or image was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      tags:
        - trainees
      summary: Upload new profile picture of a given trainee
      description: > 
       Accepts only images. The new image will override the old image.
       Max file size is 10MB. 
       The image may be resized on the backend to reduce its size.

      security:
        - cookie_token:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: "3jvz35Z"

      requestBody:
        description: ''
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                profilePicture:
                  $ref: '#/components/schemas/Binary'
          
      responses:
        '200':
          description: successful operation. Returns the image url
          content:
            application/json:
              schema:
                type: object
                properties:
                  imageUrl:
                    type: string
                    example: 'https://example.cpm/trainee/65e9c0d25cd76173a4e431c2/profile-picture'
        '404':
          description: Trainee was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
    delete:
      tags:
        - trainees
      summary: Delete profile picture of a given trainee
      description: ''
      security:
        - cookie_token:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: "3jvz35Z"
          
      responses:
        '204':
          description: successful operation

        '404':
          description: Trainee was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /geo/cities:
    get:
      tags:
        - geography
      summary: Get list of cities
      description:  Find cities by a keyword. Query and limit variables are optional. This endpoint is useful for auto-complete fields
      security:
        - cookie_token:
      parameters:
        - name: q
          in: query
          description: Search query
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Limit the number of results
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items: 
                  type: string
                  example: "Amsterdam"

  /geo/countries:
    get:
      tags:
        - geography
      summary: Get list of countries
      description:  Find countries by a keyword. Query and limit variables are optional. This endpoint is useful for auto-complete fields
      security:
        - cookie_token:
      parameters:
        - name: q
          in: query
          description: Search query
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Limit the number of results
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items: 
                  type: object
                  properties:
                    name:
                      type: string
                      example: "The Netherlands"
                    flag:
                      type: string
                      example: "🇳🇱"



components:
  schemas:
    LoginRequest:
      type: object
      properties:
        googleAccessToken:
            type: string
            example: a79.a0vvd52N38l_KtsEccaskw3Ec-i2J_h_Qn3jAsCt_iHr_CcHz_-PXzciv5RuGFm7qWAUxTfOMjvX6HjXuvjYFLiDLu2PyUeV7HBeq4TO2sFBjoeO456XQ8bCM5f44K3wCzSCau3uIrBAT9iU6agg4ggFsdqqrjZYTc4aCaYKAQYSARISFQHGb2Mij1Yo8GFRSfE5gx_OH6kfgG0170

    LoginResponse:
      type: object
      properties:
        token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
          
    Trainee:
      type: object
      required:
        - personalInfo
        - contactInfo
        - educationInfo
      properties:
        id:
          type: string
          example: '65ea2e1e696deb3b3ebff843'
        createdAt:
          type: string
          format: date-time
          example: '2024-01-01T00:00:00.000Z'
        updatedAt:
          type: string
          format: date-time
          example: '2024-01-01T00:00:00.000Z'
        displayName:
          type: string
          example: Johnny Doe
        personalInfo:
          $ref: '#/components/schemas/TraineePersonalInfo'
        contactInfo:
          $ref: '#/components/schemas/TraineeContactInfo'
        educationInfo:
          $ref: '#/components/schemas/TraineeEducationInfo'  
        employmentInfo:
          $ref: '#/components/schemas/TraineeEmploymentInfo'
        interactions:
          type: array
          items:
            $ref: '#/components/schemas/TraineeInteraction'
          
    TraineePersonalInfo:
      type: object
      required:
        - firstName
        - lastName
        - gender
      properties:
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Doe
        preferredName:
          type: string
          example: Johnny
        gender:
          type: string
          enum:
            - male
            - female
            - other
          example: male
        pronouns:
          type: string
          example: He/His
        location:
          type: string
          example: Amsterdam
        englishLevel:
          type: string
          enum:
            - needs-work
            - moderate
            - good
          example: good
        professionalDutch:
            type: boolean
            example: true
        countryOfOrigin:
          type: string
          example: Syria
        background:
          type: string
          enum:
            - refugee
            - family-reunification
            - partner-of-skilled-migrant
            - vulnerable-group
            - eu-citizen
          example: refugee
        hasWorkPermit:
          type: boolean
          example: true
        residencyStatus:
          type: string
          enum:
            - first-interview
            - second-interview
            - residency
            - citizenship
        receivesSocialBenefits:
          type: boolean
          example: true
        caseManagerUrging:
          type: boolean
          example: false
        educationLevel:
          type: string
          enum:
            - none
            - high-school
            - diploma
            - bachelors-degree
            - masters-degree
          example: bachelors-degree
        educationBackground:
          type: string
          example: BSc in Biology
        comments:
          type: string
          
    TraineeContactInfo:
      type: object
      required:
        - email
      properties:
        email:
          type: string
          example: john.doe@example.com
        slackId:
          type: string
          example: U068AQ9G99F
        phone:
          type: string
          example: 0612345678
        githubHandle:
          type: string
          example: johngithub
        linkedin:
          type: string
          example: https://linkedin.com/in/john.doe

    TraineeEducationInfo:
      type: object
      required:
        - learningStatus
        - startCohort
      properties:
        startCohort:
          type: number
          example: 46
          minimum: 0
          maximum: 999
        currentCohort:
          type: number
          example: 47
          minimum: 0
          maximum: 999
        learningStatus:
          type: string
          enum:
            - studying
            - graduated
            - on-hold
            - quit
          example: studying
        startDate:
          type: string
          format: date-time
          example: 2024-01-01T00:00:00.000Z
        graduationDate:
          type: string
          format: date-time
          example: 2024-01-01T00:00:00.000Z  
        quitReason:
          type: string
          enum:
            - technical
            - social-skills
            - personal
            - municipality-or-monetary
            - left-nl
            - other
        quitDate:
          type: string
          format: date-time
          example: 2024-01-01T00:00:00.000Z  
        strikes:
          type: array
          items:
            $ref: '#/components/schemas/Strike'
        assignments:
          type: array
          items:
            $ref: '#/components/schemas/Assignment'
        tests:
          type: array
          items:
            $ref: '#/components/schemas/Test'
        comments:
          type: string
          
    TraineeEmploymentInfo:
      type: object
      required:
        - jobPath
      properties:
        jobPath:
          type: string
          enum:
            - not-graduated
            - searching
            - internship
            - tech-job
            - non-tech-job
            - not-searching
            - other-studies
            - no-longer-helping
        cvURL:
          type: string
          example: https://example.com/cv.pdf
        availability:
          type: string
        preferredRole:
          type: string        
        preferredLocation:
          type: string   
        drivingLicense:
          type: boolean
          example: false
        extraTechnologies:
          type: string  
        employmentHistory:
          type: array
          items:
            $ref: '#/components/schemas/TraineeEmploymentHistory'
        comments: 
          type: string

    Strike:
      type: object
      required:
        - date
        - reason
        - reporterID
        - comments
      properties:
        id:
          type: string
          example: g5HQGuL8
        date:
          type: string
          format: date-time
          example: 2024-01-01T00:00:00.000Z   
        reporterID:
          type: string
          example: g4G3dc4d
        reason:
          type: string
          enum:
            - assignment
            - preparation
            - attendance
            - other
        comments: 
          type: string
          
    Assignment:
      type: object
      required:
        - type
        - status
      properties:
        createDate:
          type: string
          format: date-time
          example: 2024-01-01T00:00:00.000Z  
        type:
          type: string
          example: 'JS week 2'
        status:
          type: string
          example: 'waiting-review'
        content:
          type: string
          example: 'https://github.com/link/to/assignment'
        comments: 
          type: string
          
    Test:
      type: object
      required:
        - testDate
        - type
        - result
      properties:
        id:
          type: string
          example: g5HQGuL8
        date:
          type: string
          format: date-time
          example: 2024-01-01T00:00:00.000Z  
        type:
          type: string
          enum:
            - javaScript
            - browsers-interview
            - using-apis-interview
            - nodejs
            - react-interview
            - final-project-interview
        grade:
          type: number
          example: 8.6
        result:
          type: string
          enum:
            - passed
            - passed-with-warning
            - failed
            - disqualified
        comments: 
          type: string
          
    TraineeEmploymentHistory:
      type: object
      required:
        - startDate
        - type
        - role
        - feeCollected
      properties:
        id:
          type: string
          example: g5HQGuL8
        type:
          type: string
          enum:
          - internship
          - job
        companyName:
          type: string
          example: HackYourFuture
        role:
          type: string
        startDate:
          type: string
          format: date-time
          example: 2024-01-01T00:00:00.000Z
        endDate:
          type: string
          format: date-time
          example: 2024-01-01T00:00:00.000Z  
        feeCollected:
          type: boolean
        feeAmount:
          type: number
          example: 500
        comments: 
          type: string
          
    TraineeInteraction:
      type: object
      required:
        - type
        - details
      properties:
        type:
          type: string
          enum:
            - call
            - feedback
            - tech-hour
            - other
        reporterID:
          type: string
          example: 65ea2e1e696deb3b3ebff843
        createDate:
          type: string
          format: date-time
          example: 2024-01-01T00:00:00.000Z 
        details:
          type: string

    User:
      type: object
      properties:
        id:
          type: string
          example: Pv3R416r
        name: 
          type: string
        email: 
          type: string
          example: user@example.com
        imageUrl: 
          type: string
          example: "https://images.example.com/image.png"

    Error:
      type: object
      properties:
        message:
          type: string
          example: 'Error message'

    Binary:
      type: string
      format: binary
      example: <binary data>

  securitySchemes:
    cookie_token:
      type: apiKey
      name: dojo_token
      description: A JWT which was provided after a successful login
      in: cookie
